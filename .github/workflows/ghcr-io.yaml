name: Full-CI

on:
  push:
    branches: [ main, 'release-*' ]
    tags: [ '*' ]
  pull_request:
    branches: [ main ]

## GITHUB_TOKEN authentication
permissions:
  contents: write
  
env:
  IMG_NAME: intel/trusted-certificate-issuer
  IMG_TAG: latest

jobs:
  scan-and-push-to-GitHub-registry:
    runs-on: ubuntu-20.04
    permissions:
      contents: write
      packages: write
    environment:
      name: dev
      url: https://github.com

    steps:
    - name: Set up env
      run: |
        if [[ $GITHUB_EVENT_NAME == 'pull_request' ]]; then
          echo "IMG_TAG=latest" >> "$GITHUB_ENV"
        else
          echo "IMG_TAG=$GITHUB_REF_NAME" >> "$GITHUB_ENV"
        fi
        
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '>=1.19'

      # Don't run this since PR does not have access to secrets. 
      # Let the make docker-build generate the temp. key  
    - name: Setup signing key
      if: ${{ github.event_name != 'pull_request' }}
      run: |
        echo "$PRIVATE_KEY_PEM" > enclave-config/privatekey.pem
        sha256sum enclave-config/privatekey.pem
      shell: bash
      env:
        PRIVATE_KEY_PEM: ${{ secrets.PRIVATE_KEY_PEM }}
        
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Login to GitHub container registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Install Trivy
      run: |
        wget https://github.com/aquasecurity/trivy/releases/download/v0.42.0/trivy_0.42.0_Linux-64bit.tar.gz
        tar zxvf trivy_0.42.0_Linux-64bit.tar.gz
        sudo mv trivy /usr/local/bin/
          
    - name: Build and Push
      if: github.event_name == 'pull_request'
      run: |
        make docker-build
        make static
        make docker-push
      env:
        REGISTRY: ghcr.io
        IMG_TAG: ${{ env.IMG_TAG }}
        
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: go

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2
        
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
        
    - name: Run Trivy in GitHub SBOM mode and submit results to Dependency Graph
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        format: 'github'
        output: 'dependency-results.sbom.json'
        image-ref: '.'
        github-pat: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Prepare Images
      id: images
      run: |
          DOCKER_IMAGE=docker.io/${IMG_NAME}:${IMG_TAG}
          GHCR_IMAGE=ghcr.io/${IMG_NAME}:${IMG_TAG}
          echo ::set-output name=dockerhub::${DOCKER_IMAGE}
          echo ::set-output name=ghcr::${GHCR_IMAGE}

    - name: Extract metadata (tags, labels) for Docker
      id: metadata
      uses: docker/metadata-action@v4
      with:
        images: |
            ${{ steps.images.outputs.dockerhub }}
            ${{ steps.images.outputs.ghcr}}
        tags: |
          type=ref,event=branch

    - name: Login to DockerHub container registry
      uses: docker/login-action@v2
      with:
        registry: docker.io
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Check if the docker image exists locally
      run: |
        - RESULT=$(docker images --all)
        - echo $RESULT
      
    - name: Push to DockerHub Container Registry
      run: make docker-push
      env:
        REGISTRY: docker.io
        IMG_TAG: ${{ env.IMG_TAG }}
        IMG_NAME: ${{ env.IMG_NAME }}
