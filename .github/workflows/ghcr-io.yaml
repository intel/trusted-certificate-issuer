name: Full-CI

on:
  push:
    branches: [ main, 'release-*' ]
    tags: [ '*' ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image-to-github-registry:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - name: Set up env
      run: |
        if [[ $GITHUB_EVENT_NAME == 'pull_request' ]]; then
          echo "IMG_TAG=latest" >> "$GITHUB_ENV"
        else
          echo "IMG_TAG=$GITHUB_REF_NAME" >> "$GITHUB_ENV"
        fi
        
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '>=1.19'

      # Don't run this since PR does not have access to secrets. 
      # Let the make docker-build generate the temp. key  
    - name: Setup signing key
      if: ${{ github.event_name != 'pull_request' }}
      run: |
        echo "$PRIVATE_KEY_PEM" > enclave-config/privatekey.pem
        sha256sum enclave-config/privatekey.pem
      shell: bash
      env:
        PRIVATE_KEY_PEM: ${{ secrets.PRIVATE_KEY_PEM }}
        
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Login to GitHub container registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build
      if: github.event_name == 'pull_request'
      run: |
        make docker-build 
        make docker-push
      env:
        registry: ${{ env.REGISTRY }}
        IMG_TAG: ${{ env.IMG_TAG }}
        
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: go

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
    
    - name: Run Trivy vulnerability scanner in fs mode
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        trivy-config: trivy.yaml

    - name: Run Trivy vulnerability scanner for GitHub Registry image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'ghcr.io/intel/trusted-certificate-issuer:latest'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
    
    - name: Push to DockerHub Container Registry
      run: make docker-push
      env:
        REGISTRY: docker.io
        IMG_TAG: ${{ env.IMG_TAG }} 
