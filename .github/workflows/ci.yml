name: CICD

on:
  push:
    branches: [ main, 'release-*' ]
    tags: [ '*' ]
  pull_request:
    branches: [ main ]
  workflow_call:
    inputs:
      service:
        description: Name of the service
        type: string
        required: false
        default: ${{ github.repository }}

env:
  IMG_NAME: ${{ github.repository }}

jobs:
  security-scanning:
    uses: ./.github/workflows/security-scanning.yaml

  build-and-push:
    runs-on: ubuntu-latest
    needs: security-scanning
    environment:
      name: dev
      url: https://github.com

    steps:
    - name: Set up env
      run: |
        if [[ $GITHUB_EVENT_NAME == 'pull_request' ]]; then
          echo "IMG_TAG=latest" >> "$GITHUB_ENV"
        else
          echo "IMG_TAG=$GITHUB_REF_NAME" >> "$GITHUB_ENV"
        fi

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '>=1.19'

      # Don't run this since PR does not have access to secrets. 
      # Let the make docker-build generate the temp.key
    - name: Setup signing key
      if: ${{ github.event_name != 'pull_request' }}
      run: |
        echo "$PRIVATE_KEY_PEM" > enclave-config/privatekey.pem
        sha256sum enclave-config/privatekey.pem
      shell: bash
      env:
        PRIVATE_KEY_PEM: ${{ secrets.PRIVATE_KEY_PEM }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Prepare Images
      id: images
      run: |
          DOCKER_IMAGE=docker.io/${IMG_NAME}:${IMG_TAG}
          GHCR_IMAGE=ghcr.io/${DOCKER_IMAGE}:${IMG_TAG}
          echo ::set-output name=dockerhub::${DOCKER_IMAGE}
          echo ::set-output name=ghcr::${GHCR_IMAGE}

    - name: Login to GitHub container registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Login to DockerHub container registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: docker.io
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: metadata
      uses: docker/metadata-action@v4
      with:
        images: |
            ${{ steps.images.outputs.dockerhub }}
            ${{ steps.images.outputs.ghcr}}
        tags: |
          type=ref,event=branch

    - name: Test ghcr image with Snyk
      continue-on-error: true
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: ${GHCR_IMAGE}

    - name: Test docker image with Snyk
      continue-on-error: true
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: ${DOCKER_IMAGE}
        file: --sarif-file-output=/github/workspace/docker_image.sarif

    - name: Monitor Service image with Snyk
      uses: snyk/actions/docker@master
      continue-on-error: true
      with:
        command: container monitor
        image: ${DOCKER_IMAGE}

    - name: Build and push images
      uses: docker/build-push-action@v4.0.0
      with:
        context: .
        platforms: linux/amd64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        build-args: |
          GIT_REF=${{ github.sha }}
